name: 创建标签测试

on:
  push:
    tags:
      - 'v*'  # 匹配所有 Tag

jobs:
  # Job 3: 创建 Release 并上传 .dmg 和 .exe 文件
  create-release:
    runs-on: ubuntu-latest  # 使用轻量级的 Ubuntu 环境
    env:
      APP_NAME: multitimer
      TAG_NAME: ${{ github.ref_name }} # push tag 触发的变量
    needs: [build]  # 依赖 build-mac 和 build-windows job
    permissions:
      contents: write  # 允许写入仓库内容
    steps:
      # 2. 判断 Release 是否存在
      - name: Check if Release exists
        id: check_release
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            try {
              const release = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: "${{ env.TAG_NAME }}"
              });
              console.log("Release exists. Upload URL:", release.data.upload_url);
              fs.appendFileSync(process.env.GITHUB_OUTPUT, `exists=true\n`);  // 设置 exists 输出
              fs.appendFileSync(process.env.GITHUB_OUTPUT, `upload_url=${release.data.upload_url}\n`);  // 设置 upload_url 输出
            } catch (error) {
              if (error.status === 404) {
                console.log("Release does not exist.");
                fs.appendFileSync(process.env.GITHUB_OUTPUT, `exists=false\n`);  // 设置 exists 输出
              } else {
                throw error;
              }
            }

      # 3. 如果 Release 不存在，创建新的 Release
      - name: Create Release if not exists
        if: steps.check_release.outputs.exists == 'false'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}  # 使用输入的标签名称
          release_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
